pipeline {
    agent any

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'staging', 'prod'], description: 'Choose deployment environment')
        string(name: 'APP_VERSION', defaultValue: 'v1.0', description: 'Application version tag')
    }

    environment {
        PROJECT_DIR = 'jenkins-ansible-demo-miniproject' // ðŸ‘ˆ This is added
    }

    stages {
        stage('Show Inputs') {
            steps {
                echo "Deploying version: ${params.APP_VERSION}"
                echo "Target Environment: ${params.ENVIRONMENT}"
            }
        }

        stage('CI Tasks in Parallel') {
            parallel {
                stage('Lint') {
                    steps {
                        dir("${env.PROJECT_DIR}") {
                            echo 'Running Lint Check...'
                            sh 'npm run lint'

                        }
                    }
                }
                stage('Test') {
                    steps {
                        dir("${env.PROJECT_DIR}") {
                            echo 'Running Tests...'
                            sh 'npm test'
                        }
                    }
                }
                stage('Build Docker Image') {
                    steps {
                        dir("${env.PROJECT_DIR}") {
                            echo "Building Docker image: my-app:${params.APP_VERSION}"
                            sh "docker build -t my-app:${params.APP_VERSION} ."
                        }
                    }
                }
            }
        }

        stage('Deploy to EC2 (Ansible)') {
            when {
                expression { params.ENVIRONMENT == 'prod' }
            }
            steps {
                echo "Running Ansible Playbook for production deployment..."
                sshagent(credentials: ['ec2-ssh-key']) {
                    dir("${env.PROJECT_DIR}") {
                        sh '''
                        cd ansible
                        ansible-playbook -i inventory deploy.yml \
                        --extra-vars "app_version=${APP_VERSION} env=${ENVIRONMENT}"
                        '''
                    }
                }
            }
        }
    }
}
